version: '3.3'

#############################################################
############################# VOLUMES #######################
#############################################################
volumes:
# MARIADB
  mariadb-master:
    driver: ${VOLUME_DRIVER}
  mariadb-slave:
    driver: ${VOLUME_DRIVER}
  mysql-master:
    driver: ${VOLUME_DRIVER}
  mysql-slave:
    driver: ${VOLUME_DRIVER}
# REDIS
  redis:
    driver: ${VOLUME_DRIVER}
# WORKSPACE
  composer:
    driver: ${VOLUME_DRIVER}
#ELASTICSEARCH
  elasticsearch:
    driver: ${VOLUME_DRIVER}
#JENKINS
  jenkins:
    driver: ${VOLUME_DRIVER}


#############################################################
############################# SERVICES ######################
#############################################################
services:
# JENKINS
  jenkins:
    build:
      context: ./Jenkins
      dockerfile: Dockerfile
      args:
      - CONTAINER_VERSION=${JENKINS_VER}
    restart: always
    ports:
      - "8082:8080"
      - "50000:50000"
    volumes:
      - jenkins:/var/jenkins_home
      - ./Source:/workspace
    env_file:
      - ./Jenkins/.env

# COMPOSER
  workspace :
    build:
      context: ./Workspace
      dockerfile: Dockerfile
      args:
        - CONTAINER_VERSION=${PHP_VER}
        - PHP_EXTENSION=${PHP_EXTENSION}
    restart: always
    tty: true
    stdin_open: false
    volumes:
      - ./Source:/var/www/html
      - composer:/root/.composer
    env_file:
      - ./Workspace/.env

# CADVISOR
  cadvisor :
    build:
      context: ./Cadvisor
      dockerfile: Dockerfile
      args:
        - CONTAINER_VERSION=${CADVISOR_VER}
    restart: always
    ports:
      - "8085:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /var/run/docker.sock:/var/run/docker.sock
    env_file:
      - ./Cadvisor/.env

# LOGZIO
#  logzio:
#    build:
#      context: ./LogzIO
#      dockerfile: Dockerfile
#      args:
#        - CONTAINER_VERSION=${LOGZIO_VER}
#    restart: always
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
#    env_file:
#      - ./LogzIO/.env

# NGINX
  nginx:
    build:
      context: ./Nginx
      dockerfile: Dockerfile
      args:
        - CONTAINER_VERSION=${NGINX_VER}
    ports:
      - "80:80"
    restart: always
    volumes:
      - ./Source:/var/www/html
    env_file:
      - ./Nginx/.env
    depends_on:
      - php-fpm
      - mariadb-master
    links:
      - php-fpm

# ADMINER
  adminer:
    build:
      context: ./Adminer
      dockerfile: Dockerfile
      args:
        - CONTAINER_VERSION=${ADMINER_VER}
    ports:
      - "8081:8080"
    restart: always
    env_file:
      - ./Adminer/.env
    depends_on:
      - mariadb-master
# MYSQL
  mysql-master:
    build:
      context: ./Mysql-Master
      dockerfile: Dockerfile
      args:
        - CONTAINER_VERSION=${MYSQL_VER}
    # ports:
    #   - "3306:3306"
    env_file:
      - ./Mysql-Master/.env
    volumes:
      - mysql-master:/var/lib/mysql
      - ~/dumps:/dumps

  # https://www.tecmint.com/mysql-master-slave-replication-on-centos-rhel-debian/
  mysql-slave:
    build:
      context: ./Mysql-Slave
      dockerfile: Dockerfile
      args:
        - CONTAINER_VERSION=${MYSQL_VER}
    # ports:
    #   - "3306:3306"
    env_file:
      - ./Mysql-Slave/.env
    volumes:
      - mysql-slave:/var/lib/mysql

# MARIADB
  mariadb-master:
    build:
      context: ./MariaDB-Master
      dockerfile: Dockerfile
      args:
        - CONTAINER_VERSION=${MARIADB_VER}
    # ports:
    #   - "3306:3306"
    env_file:
      - ./MariaDB-Master/.env
    volumes:
      - mariadb-master:/var/lib/mysql

  # https://www.tecmint.com/mariadb-master-slave-replication-on-centos-rhel-debian/
  mariadb-slave:
    build:
      context: ./MariaDB-Slave
      dockerfile: Dockerfile
      args:
        - CONTAINER_VERSION=${MARIADB_VER}
    # ports:
    #   - "3306:3306"
    env_file:
      - ./MariaDB-Slave/.env
    volumes:
      - mariadb-slave:/var/lib/mysql

# PHP-FPM
  php-fpm:
    build:
      context: ./Php-fpm
      dockerfile: Dockerfile
      args:
        - CONTAINER_VERSION=${PHP_VER}
        - PHP_EXTENSION=${PHP_EXTENSION}
    env_file:
      - ./Php-fpm/.env
    volumes:
      - ./Source:/var/www/html

# REDIS
  redis:
    build:
      context: ./Redis
      dockerfile: Dockerfile
      args:
        - CONTAINER_VERSION=${REDIS_VER}
    env_file:
      - ./Redis/.env

# ELASTIC SEARCH
  elastic-search:
    build:
      context: ./Elastic-Search
      dockerfile: Dockerfile
      args:
        - CONTAINER_VERSION=${ELASTIC_SEARCH_VER}
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    depends_on:
      - php-fpm
    env_file:
      - ./Elastic-Search/.env

# SUPERVISOR
  supervisor:
    build:
      context: ./Supervisor
      dockerfile: Dockerfile
      args:
        - CONTAINER_VERSION=${PHP_VER}
        - PHP_EXTENSION=${PHP_EXTENSION}
    env_file:
      - ./Supervisor/.env
    volumes:
      - ./Source:/var/www/html
      - ./Supervisor/config:/etc/supervisor/config
